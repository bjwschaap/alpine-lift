# This file is a template, and might need editing before it works on your project.
image: golang:1.11.4-alpine

variables:
  # Please edit to your GitLab project
  REPO_NAME: github.com/bjwschaap/lift
  GO111MODULES: on

# The problem is that to be able to use go get, one needs to put
# the repository in the $GOPATH. So for example if your gitlab domain
# is gitlab.com, and that your repository is namespace/project, and
# the default GOPATH being /go, then you'd need to have your
# repository in /go/src/gitlab.com/namespace/project
# Thus, making a symbolic link corrects this.
before_script:
  - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
  - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
  - cd $GOPATH/src/$REPO_NAME
  - sed -i 's/dl-cdn.alpinelinux.org/10.32.2.20/g' /etc/apk/repositories
  - apk add --no-cache git make

stages:
  - check
  - build
  - publish

check:
  stage: check
  allow_failure: true
  script:
    - go get -u golang.org/x/lint/golint
    - make check

build:
    stage: build
    script:
      - make DOCKERRUN="" GITTAG=$CI_COMMIT_SHORT_SHA all
    artifacts:
      paths:
        - bin/lift

publish:
  stage: publish
  script:
      - apk add --no-cache curl
      - curl --fail --user "${NEXUS_CREDENTIALS}" --upload-file bin/lift http://nexus.proatnedap.org/repository/gitlab-alpine-lift/${CI_COMMIT_SHORT_SHA}/lift
